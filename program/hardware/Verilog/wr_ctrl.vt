`timescale 1 ns/ 1 ns
module wr_ctrl_tb();

// Inputs
reg   clk                                  = 0 ;
reg   rst_n                                = 0 ;
reg   rx                                   = 0 ;
reg   ad_sdo                               = 0 ;
reg   ad_eoc                               = 0 ;

//  Outputs
wire  tx                                   ;
wire  [1:0]  da_csn                        ;
wire  da_sck                               ;
wire  da_sdi                               ;
wire  da_ldn                               ;
wire  ad_csn                               ;
wire  ad_sck                               ;
wire  ad_sdi                               ;
wire  [8:0]  sw                            ;
wire  [3:0]  led                           ;

////////////////////
reg [15:0] amp2;
reg [15:0] switch;
reg [15:0] chan;
reg [15:0] dly;
reg [15:0] amp;
reg [31:0] wid;
reg [111:0] data_in;

task Rx_rec;
    input [7:0] data;
    begin
        #8_680 rx = 0;
        #8_680 rx = data[0]; #8_680 rx = data[1];
        #8_680 rx = data[2]; #8_680 rx = data[3];
        #8_680 rx = data[4]; #8_680 rx = data[5];
        #8_680 rx = data[6]; #8_680 rx = data[7];
        #8_680 rx = 1;
    end
endtask

task Rec;
    input [111:0] data_in;
    begin: block_1
        reg [7:0] i;
        for(i=0;i<14;i=i+1)
            Rx_rec(data_in[111-i*8-:8]);
    end
endtask

wr_ctrl  u_wr_ctrl (
    .clk                     ( clk           ),
    .rst_n                   ( rst_n         ),
    .rx                      ( rx            ),
    .ad_sdo                  ( ad_sdo        ),
    .ad_eoc                  ( ad_eoc        ),

    .tx                      ( tx            ),
    .da_csn                  ( da_csn        ),
    .da_sck                  ( da_sck        ),
    .da_sdi                  ( da_sdi        ),
    .da_ldn                  ( da_ldn        ),
    .ad_csn                  ( ad_csn        ),
    .ad_sck                  ( ad_sck        ),
    .ad_sdi                  ( ad_sdi        ),
    .led                     ( led     [3:0] )
);

always@(negedge ad_sck)begin
    ad_sdo = ~ad_sdo;
end
always@(posedge ad_csn)begin
    #1_000 ad_eoc = 0;
    #10_000 ad_eoc = 1;
    ad_sdo = ~ad_sdo;
end

initial begin
    clk = 0;
    rst_n = 1;
    rx = 1;
    ad_sdo = 0;
    ad_eoc = 1;
end

always begin
    #10 clk = ~clk;
end

initial begin
    #100 rst_n = 0;
    #100 rst_n = 1;
////1V_0.3ms_1ms_4.095V
    # 2_000_000
    amp2={4'd0, 12'd1000};
    switch = {7'd0, 9'b1_0000_1111};
    chan = {5'd2, 11'b101_0101_0101};
    dly = 16'd300;
    amp={4'd0, 12'd4095};
    wid = 32'd1000;
    data_in = {amp2, switch, chan, dly, amp, wid};
    Rec(data_in);
////0V_100us_200us_4.095V
    # 2_000_000
    amp2={4'd1, 12'd0};
    switch = {7'd0, 9'b0_1011_0100};
    chan = {5'd4, 11'b000_0000_0000};
    dly = 16'd100;
    amp={4'd1, 12'd4095};
    wid = 32'd200;
    data_in = {amp2, switch, chan, dly, amp, wid};
    Rec(data_in);
////5ms_1s_0V
    # 2_000_000
    amp2={4'd0, 12'd4095};
    switch = {7'd0, 9'b0_0000_1111};
    chan = {5'd6, 11'b111_1111_1111};
    dly = 16'd5000;
    amp={4'd0, 12'd0};
    wid = 32'd1_000_000;
    data_in = {amp2, switch, chan, dly, amp, wid};
    Rec(data_in);
end

endmodule